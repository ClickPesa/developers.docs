{
  "openapi": "3.0.1",
  "info": {
    "title": "CORE API OpenAPI Specification",
    "description": "This is the API documentation for the ClickPesa CORE API",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.clickpesa.com/third-parties"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/payments/preview-ussd-push-request": {
      "post": {
        "tags": ["Payments", "Preview"],
        "description": "Preview a PUSH request for payments",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["amount", "orderReference"],
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "Amount"
                  },
                  "orderReference": {
                    "type": "string",
                    "description": "Your unique Order reference"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "USSD Push Preview response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreviewUSSDPushResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or Expired Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreviewUssdPushValidationError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreviewUSSDPushConflictError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreviewUssdPushNotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/payments/initiate-ussd-push-request": {
      "post": {
        "tags": ["Payments", "Initiate"],
        "description": "Initiates a PUSH request for payments.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["amount", "orderReference", "phoneNumber"],
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "Amount"
                  },
                  "orderReference": {
                    "type": "string",
                    "description": "Your unique Order reference"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Phone Number to receive USSD push and make payment"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "USSD Push Preview response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiateUSSDPushResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or Expired Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiateUssdPushValidationError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiateUSSDPushConflictError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiateUssdPushNotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiateUSSDPushInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/checkout-link/generate-checkout-url": {
      "post": {
        "tags": ["Payments"],
        "description": "Generate Checkout Link for receiving online payments",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "title": "Body With Total Amount",
                    "required": [
                      "totalPrice",
                      "orderReference",
                      "orderCurrency"
                    ],
                    "properties": {
                      "totalPrice": {
                        "type": "integer",
                        "description": "Amount"
                      },
                      "orderReference": {
                        "type": "string",
                        "description": "Your unique Order reference"
                      },
                      "orderCurrency": {
                        "type": "string",
                        "enum": ["TZS", "USD"],
                        "description": "Phone Number to receive USSD push and make payment"
                      },
                      "customerName": {
                        "type": "string",
                        "description": "Your customer name"
                      },
                      "customerEmail": {
                        "type": "string",
                        "description": "Your customer email"
                      },
                      "customerPhone": {
                        "type": "string",
                        "description": "Your customer phone number"
                      }
                    }
                  },
                  {
                    "title": "Body With Order Items",
                    "required": [
                      "orderItems",
                      "orderReference",
                      "orderCurrency"
                    ],
                    "properties": {
                      "orderItems": {
                        "type": "array",
                        "description": "Your order items",
                        "items": {
                          "type": "object",
                          "required": ["name", "price", "quantity"],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Item name"
                            },
                            "price": {
                              "type": "integer",
                              "description": "Amount"
                            },
                            "quantity": {
                              "type": "integer",
                              "description": "Quantity"
                            }
                          }
                        }
                      },
                      "orderReference": {
                        "type": "string",
                        "description": "Your unique Order reference"
                      },
                      "orderCurrency": {
                        "type": "string",
                        "enum": ["TZS", "USD"],
                        "description": "Phone Number to receive USSD push and make payment"
                      },
                      "customerName": {
                        "type": "string",
                        "description": "Your customer name"
                      },
                      "customerEmail": {
                        "type": "string",
                        "description": "Your customer email"
                      },
                      "customerPhone": {
                        "type": "string",
                        "description": "Your customer phone number"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Generate Checkout Link Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateCheckoutLinkResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or Expired Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreviewUssdPushValidationError"
                }
              }
            }
          },
          "409": {
            "description": "Conflict Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreviewUSSDPushConflictError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreviewUssdPushNotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/generate-token": {
      "post": {
        "tags": ["Authorization", "Security"],
        "description": "Generate Token to use for all other api calls",
        "parameters": [
          {
            "in": "header",
            "name": "client-id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Your Client ID for authentication."
          },
          {
            "in": "header",
            "name": "api-key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Your API Key for authentication."
          }
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Generate token response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTokenResponse"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Client Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTokenInvalidClientDetailsError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PreviewUSSDPushResponse": {
        "type": "object",
        "properties": {
          "activeMethods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Payment method name (e.g., TIGO-PESA, M-PESA, AIRTEL-MONEY)"
                },
                "status": {
                  "type": "string",
                  "enum": ["AVAILABLE", "UNAVAILABLE"],
                  "description": "Status of the payment method"
                },
                "fee": {
                  "type": "integer",
                  "description": "Transaction fee in the smallest currency unit (e.g., cents)"
                }
              }
            }
          }
        }
      },
      "PreviewUssdPushValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "enum": [
              "Valid Client ID is required",
              "Application has no access to COLLECTION API feature. Enable it on your application.",
              "Invalid Order Reference, should only contain alphanumeric characters and cannot be blank"
            ],
            "example": "Invalid Order Reference, should only contain alphanumeric characters and cannot be blank"
          }
        }
      },
      "PreviewUssdPushNotFoundError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "enum": [
              "Account has no payment collection methods",
              "Account has no valid payment method"
            ],
            "example": "Account has no payment collection methods"
          }
        }
      },
      "PreviewUSSDPushConflictError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Conflict message when an order reference is already used",
            "example": "Order reference {Your reference} already used: Create a different reference"
          }
        }
      },
      "InitiateUSSDPushResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the USSD push transaction"
          },
          "status": {
            "type": "string",
            "enum": ["PROCESSING", "SUCCESS", "FAILED", "SETTLED"],
            "description": "Current status of the transaction"
          },
          "channel": {
            "type": "string",
            "description": "Payment channel used for the transaction (e.g., TIGO-PESA, M-PESA, AIRTEL-MONEY)"
          },
          "orderReference": {
            "type": "string",
            "description": "Your unique Reference identifier for the order"
          },
          "collectedAmount": {
            "type": "string",
            "description": "Amount collected from the transaction"
          },
          "collectedCurrency": {
            "type": "string",
            "description": "Currency of the collected amount (e.g., TZS)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the transaction was created"
          }
        }
      },
      "GenerateTokenResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "token": {
            "type": "string",
            "example": "Bearer token"
          }
        },
        "required": ["success", "token"]
      },
      "GenerateTokenInvalidClientDetailsError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "enum": [
              "Invalid client details",
              "Invalid or Expired API-Key",
              "Unauthorized API-Key"
            ],
            "example": "Invalid or Expired API-Key"
          }
        },
        "required": ["message"]
      },
      "GenerateCheckoutLinkResponse": {
        "type": "object",
        "properties": {
          "checkoutLink": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
